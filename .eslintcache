[{"/Users/owner/Code/northone-graphql/src/index.js":"1","/Users/owner/Code/northone-graphql/src/App.js":"2","/Users/owner/Code/northone-graphql/src/redux/store/index.js":"3","/Users/owner/Code/northone-graphql/src/components/todo.component.js":"4","/Users/owner/Code/northone-graphql/src/components/add-todo.component.js":"5","/Users/owner/Code/northone-graphql/src/components/todos-list.component.js":"6","/Users/owner/Code/northone-graphql/src/redux/actions/index.js":"7","/Users/owner/Code/northone-graphql/src/redux/constants/action.types.js":"8","/Users/owner/Code/northone-graphql/src/redux/reducers/index.js":"9","/Users/owner/Code/northone-graphql/src/queries/index.js":"10","/Users/owner/Code/northone-graphql/src/redux/selectors/index.js":"11","/Users/owner/Code/northone-graphql/src/redux/utils/index.js":"12","/Users/owner/Code/northone-graphql/src/http-common.js":"13","/Users/owner/Code/northone-graphql/src/redux/saga/api-sagas.js":"14"},{"size":798,"mtime":1713643562772,"results":"15","hashOfConfig":"16"},{"size":2401,"mtime":1713897189563,"results":"17","hashOfConfig":"16"},{"size":720,"mtime":1713980142948,"results":"18","hashOfConfig":"16"},{"size":4897,"mtime":1713973214690,"results":"19","hashOfConfig":"16"},{"size":3754,"mtime":1713980270491,"results":"20","hashOfConfig":"16"},{"size":6616,"mtime":1713978974428,"results":"21","hashOfConfig":"16"},{"size":3462,"mtime":1713977180450,"results":"22","hashOfConfig":"16"},{"size":1667,"mtime":1713968273952,"results":"23","hashOfConfig":"16"},{"size":3510,"mtime":1713980300511,"results":"24","hashOfConfig":"16"},{"size":2262,"mtime":1713898060385,"results":"25","hashOfConfig":"16"},{"size":872,"mtime":1614731926795,"results":"26","hashOfConfig":"16"},{"size":795,"mtime":1612802080961,"results":"27","hashOfConfig":"16"},{"size":173,"mtime":1615083667823,"results":"28","hashOfConfig":"16"},{"size":6248,"mtime":1713978748351,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1kd5zef",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/owner/Code/northone-graphql/src/index.js",[],["61","62"],"/Users/owner/Code/northone-graphql/src/App.js",[],"/Users/owner/Code/northone-graphql/src/redux/store/index.js",["63"],"/Users/owner/Code/northone-graphql/src/components/todo.component.js",["64"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport DatePicker from \"react-date-picker\";\nimport { useNavigate } from \"react-router-dom\";\nimport { setCurrentTodo, setMessage, updateTodo, deleteTodo } from \"../redux/actions\";\nimport { selectCurrentTodo, selectMessage } from \"../redux/selectors\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { EDIT_TODO, DELETE_TODO, GET_TODOS } from \"../queries\";\n\nconst Todo = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const currentTodo = useSelector(selectCurrentTodo);\n  const message = useSelector(selectMessage);\n  const [dateValue, onChange] = useState(\n    new Date(\n      currentTodo && currentTodo.dueDate ? currentTodo.dueDate : new Date()\n    )\n  );\n\n  const [updateTodoMutation] = useMutation(EDIT_TODO, {\n    refetchQueries: [{ query: GET_TODOS }],\n  });\n  const [deleteTodoMutation] = useMutation(DELETE_TODO, {\n    refetchQueries: [{ query: GET_TODOS }],\n  });\n\n  useEffect(() => {\n    clearMessage();\n    checkLocalStorage();\n  }, []);\n\n  const clearMessage = () => dispatch(setMessage(\"\"));\n\n  const checkLocalStorage = () => {\n    if (!currentTodo) {\n      let todo = localStorage.getItem(\"currentTodo\");\n      dispatch(setCurrentTodo(JSON.parse(todo)));\n    }\n  };\n\n  const handleInputChange = (event) => {\n    event.preventDefault(); // prevent a browser reload/refresh\n    const { name, value } = event.target;\n    dispatch(setCurrentTodo({ ...currentTodo, [name]: value }));\n  };\n\n  const updateTodoUnderEdit = (status = null) => {\n    currentTodo.dueDate = dateValue;\n    if (status !== null) {\n      currentTodo.status = status;\n    }\n    updateTodoMutation({\n      variables: {\n        id: currentTodo._id,\n        title: currentTodo.title,\n        description: currentTodo.description,\n        status: currentTodo.status,\n        dueDate: currentTodo.dueDate,\n      },\n    });\n    setTimeout(() => {\n      dispatch(updateTodo(currentTodo))\n    }, 500);\n    navigate('/');\n  };\n\n  const deleteTodoUnderEdit = () => {\n    deleteTodoMutation({ variables: { id: currentTodo._id } });\n    setTimeout(() => {\n      dispatch(deleteTodo(currentTodo))\n    }, 500);\n    navigate('/')\n  };\n\n  return (\n    <div>\n      {currentTodo ? (\n        <div className=\"edit-form\">\n          <h4>To Do</h4>\n          <form>\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">\n                <strong>Title:</strong>\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                name=\"title\"\n                value={currentTodo.title}\n                onChange={(currentTodo) => handleInputChange(currentTodo)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">\n                <strong>Description:</strong>\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"description\"\n                name=\"description\"\n                value={currentTodo.description}\n                onChange={(currentTodo) => handleInputChange(currentTodo)}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>\n                <strong>Status:</strong>{\" \"}\n              </label>\n              {currentTodo.status ? \"Done\" : \"Pending\"}\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"dueDate\">\n                <strong>Due Date:</strong>\n              </label>{\" \"}\n              <DatePicker onChange={onChange} value={dateValue} />\n            </div>\n          </form>\n\n          {currentTodo.status ? (\n            <button\n              className=\"btn btn-primary mr-2\"\n              onClick={() => updateTodoUnderEdit(false)}\n            >\n              Mark Pending\n            </button>\n          ) : (\n            <button\n              className=\"btn btn-primary mr-2\"\n              onClick={() => updateTodoUnderEdit(true)}\n            >\n              Mark Done\n            </button>\n          )}\n\n          <button\n            className=\"btn btn-danger mr-2\"\n            onClick={() => deleteTodoUnderEdit()}\n          >\n            Delete <FontAwesomeIcon icon={faTrash} />\n          </button>\n\n          <button\n            type=\"submit\"\n            className=\"btn btn-success mr-2\"\n            onClick={() => updateTodoUnderEdit()}\n          >\n            Update\n          </button>\n          <p>{message}</p>\n        </div>\n      ) : (\n        <div>\n          <br />\n          <p>Please click on a \"To Do\"...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Todo;\n","/Users/owner/Code/northone-graphql/src/components/add-todo.component.js",[],"/Users/owner/Code/northone-graphql/src/components/todos-list.component.js",[],"/Users/owner/Code/northone-graphql/src/redux/actions/index.js",[],"/Users/owner/Code/northone-graphql/src/redux/constants/action.types.js",[],"/Users/owner/Code/northone-graphql/src/redux/reducers/index.js",[],"/Users/owner/Code/northone-graphql/src/queries/index.js",[],"/Users/owner/Code/northone-graphql/src/redux/selectors/index.js",[],"/Users/owner/Code/northone-graphql/src/redux/utils/index.js",[],"/Users/owner/Code/northone-graphql/src/http-common.js",[],["65","66"],"/Users/owner/Code/northone-graphql/src/redux/saga/api-sagas.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":7,"column":8,"nodeType":"73","messageId":"74","endLine":7,"endColumn":15},{"ruleId":"75","severity":1,"message":"76","line":33,"column":6,"nodeType":"77","endLine":33,"endColumn":8,"suggestions":"78"},{"ruleId":"67","replacedBy":"79"},{"ruleId":"69","replacedBy":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'apiSaga' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkLocalStorage' and 'clearMessage'. Either include them or remove the dependency array.","ArrayExpression",["83"],["81"],["82"],"no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},"Update the dependencies array to be: [checkLocalStorage, clearMessage]",{"range":"86","text":"87"},[1219,1221],"[checkLocalStorage, clearMessage]"]